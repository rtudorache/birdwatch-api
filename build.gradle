plugins {
	id 'org.springframework.boot' version '2.7.18'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
	id 'org.openapi.generator' version '5.4.0'
}

group = 'com.spirent'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	
	// Logging
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	
	// Exclude default logging to avoid conflicts
	configurations {
		all {
			exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
		}
	}

	// Database
	implementation 'org.postgresql:postgresql'

	// Utilities
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// OpenAPI Generated Code Dependencies
	// Required for things like OffsetDateTime mapping and @Valid
	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.20'
	implementation 'javax.validation:validation-api:2.0.1.Final'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.testcontainers:junit-jupiter:1.19.3'
	testImplementation 'org.testcontainers:postgresql:1.19.3'

}

// --- OpenAPI Generator Configuration ---
openApiGenerate {
	generatorName = "spring"
	inputSpec = "$projectDir/src/main/resources/api/birds.yaml"
	outputDir = "$buildDir/generated"
	apiPackage = "com.spirent.birdwatch.api"
	modelPackage = "com.spirent.birdwatch.model"

	configOptions = [
			delegatePattern: "true",
			interfaceOnly  : "true",
			java8          : "true",
			useBeanValidation: "true"
	]
}

// --- Build Lifecycle ---
sourceSets {
	main {
		java {
			srcDir "$buildDir/generated/src/main/java"
		}
	}
}

tasks.named("compileJava").configure {
	dependsOn("openApiGenerate")
}

tasks.named('test') {
	useJUnitPlatform()
}